import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;

public class 指派 {

    static int n=20;
    static double [][]efficiency=new double[][]{{0.8055386358696807, 0.5681248667585147, 0.702787958495432, 0.5274127431948102, 0.6347091226353575, 0.4265653907432194, 0.8672324845603696, 0.4812345751681376, 0.6025359949950145, 0.8686385857343052, 0.03295508004661174, 0.590642871515403, 0.7536730388778647, 0.08098937682341245, 0.6752523802239531, 0.9818779366799746, 0.10349886727669366, 0.45648305817044565, 0.43064379171384626, 0.7580274488195193},
            {0.39373526255937574, 0.004644280984623883, 0.1044242251803017, 0.8149837930170397, 0.8056165321023661, 0.6355178151304448, 0.34696505061007243, 0.8705596557179812, 0.7407478454124948, 0.8345595811469577, 0.4257951083899466, 0.748296722558629, 0.3588919436613496, 0.5518306731603108, 0.11522142843229588, 0.9037910213408007, 0.422275447424729, 0.9656811515513419, 0.10122471698354762, 0.15889721715586758},
            {0.13760723702028643, 0.14927456043409848, 0.45659207721768025, 0.617963608515018, 0.10985315975664967, 0.5677178378623041, 0.6797257060243206, 0.7802884550060207, 0.22591278028080664, 0.7642256835983523, 0.5102925731356526, 0.9342774229346003, 0.27169573439197225, 0.5556624871721214, 0.23585729357243546, 0.02132097819068579, 0.35269596816220894, 0.5509688064410182, 0.485866315152804, 0.2911993510958085},
            {0.7360150510245563, 0.8303934517637238, 0.5728284095735172, 0.23586236382488124, 0.5608860007809371, 0.17911657752626298, 0.2852633246676245, 0.48471983118860396, 0.9751014484185608, 0.3557629468428878, 0.6629662688826813, 0.5721176254836701, 0.6463511335425032, 0.494468581063225, 0.6923630707977875, 0.7464636138715671, 0.27032565388921104, 0.8885784971639369, 0.04820736004790793, 0.28050666644353506},
            {0.6515443066415102, 0.0847165936647194, 0.977597279175732, 0.06356066065870869, 0.16821731812002105, 0.42788363669264917, 0.17326632528341324, 0.609005273913782, 0.9490535134255537, 0.9414024141679163, 0.0153290881649365, 0.9941835442962234, 0.8877764046761903, 0.6999442675939397, 0.8741393879806979, 0.6648557001237068, 0.7002134047145239, 0.6595342201817929, 0.2616448605299204, 0.4826578235406622},
            {0.5891738959154338, 0.2453467458304731, 0.4945985854988918, 0.871552969263514, 0.7239340487468306, 0.8662679749955721, 0.19021487291133665, 0.42805104891141865, 0.6639975952693873, 0.9246140475057091, 0.35333296439317585, 0.9000135298394295, 0.06090311287607575, 0.8200599651728165, 0.033878945270031546, 0.010147371017900197, 0.45720009109387594, 0.9087463589090169, 0.5343927648549005, 0.20283219027531818},
            {0.7683181242971744, 0.37169688070668205, 0.9296135828287223, 0.026713445287187332, 0.08090404366299642, 0.471092004812108, 0.2235935338331465, 0.530533607143961, 0.7303045022307415, 0.7286094212034531, 0.8145366405211056, 0.7459621949106175, 0.230222136176786, 0.14695549755867765, 0.06353548580618928, 0.0587248375550089, 0.5191759964930067, 0.7138759815308949, 0.6706058664102097, 0.028120476012383766},
            {0.1612471568312296, 0.07734839052850562, 0.2498951326289981, 0.005054815300834292, 0.5926936346620046, 0.461322497256091, 0.9656674607456723, 0.7200071398033602, 0.24136872580593405, 0.6032895322533923, 0.34164503041645666, 0.8648873144413638, 0.36247947749117626, 0.7381246531320155, 0.388511163583953, 0.5765274537668584, 0.7320731549477639, 0.4270610082632098, 0.007858016687921854, 0.6445936101063979},
            {0.9187413071328725, 0.3363189000359562, 0.22558765746386988, 0.21299032448546218, 0.7143822462006071, 0.9068257038377681, 0.1837521806135799, 0.7213708414029588, 0.44646482349437544, 0.22462840166265186, 0.9770451333375985, 0.8421546045306089, 0.3170876134171159, 0.30101300571077727, 0.3586327980271853, 0.20849263638345938, 0.6182291231116419, 0.40201000619797167, 0.05974072429313659, 0.7999105311432962},
            {0.657936594372912, 0.028878911177733446, 0.9683874367927383, 0.9548980859186206, 0.4988020731162873, 0.6443288783660613, 0.69488339449805, 0.11350282499674069, 0.15792616625574618, 0.2636466230697495, 0.1151906802565249, 0.558025320957128, 0.7466717793641076, 0.5855667306135918, 0.3279643976824381, 0.616201280702528, 0.13886092399952188, 0.4246339064957443, 0.08707439870059086, 0.018796055687433255},
            {0.14767024721059718, 0.824969968449068, 0.17863154241364398, 0.3623256381214045, 0.8643315421862523, 0.3847736359922962, 0.40002005378197947, 0.9176570456098893, 0.765845650068598, 0.0015439941746405728, 0.7681636094486484, 0.34653057359083106, 0.4342698022376048, 0.4599335482132543, 0.33522937565573463, 0.2405851881130746, 0.24673929678295647, 0.027300125589405866, 0.5222011956695737, 0.7812572201508351},
            {0.19323674718013095, 0.4964416362489955, 0.19422920486200523, 0.23396213260610643, 0.058223660803259136, 0.9206610088231914, 0.796389935007467, 0.4362574358598953, 0.562599650825065, 0.6232233571696105, 0.744467397468797, 0.9172247031177067, 0.7040578229598451, 0.9314310936385185, 0.9225927210370749, 0.7940970132155568, 0.4567547287252397, 0.484956843012749, 0.578055399286192, 0.13219755920736376},
            {0.1953162363387495, 0.8987382217230946, 0.12332708281345706, 0.02554432444299204, 0.6935512702994199, 0.022652458173761048, 0.35631429078603527, 0.2580142267360007, 0.31484742583109726, 0.03335276965065603, 0.3920837351361208, 0.03875024548891948, 0.059073903419766705, 0.11806297537525057, 0.162780124609745, 0.970532618867689, 0.45991871711711585, 0.5657902852738039, 0.6871828794946196, 0.10612599504512432},
            {0.9369387826114407, 0.6683305120080021, 0.43732511142908703, 0.6751516482363946, 0.09820307866906408, 0.9516043348981392, 0.036824239628394206, 0.8228249028023488, 0.6622603600059939, 0.9072765362733002, 0.21405067720824567, 0.49193483458245957, 0.1222648495360803, 0.5752752690333369, 0.40298725149260506, 0.40073449738963585, 0.0104447462643954, 0.03974118177614927, 0.6356088060710005, 0.9219472480224848},
            {0.6376998180970567, 0.14410164642221035, 0.4018376672342201, 0.551884950551635, 0.4809660002363748, 0.5053781874499954, 0.9666078631846942, 0.5737122659520227, 0.9700866853148645, 0.2135002402102414, 0.22829659808933234, 0.46518054369043804, 0.28628155573760505, 0.4383116195060702, 0.5787590957979648, 0.5786940143581675, 0.92590565334952, 0.5351209412735344, 0.3824285463786149, 0.6303597537401957},
            {0.20604305715618254, 0.13906055072692747, 0.6304201335037978, 0.5747120087943556, 0.5925805546654239, 0.16918301155889093, 0.04530444406130851, 0.5130909746783733, 0.7167589538309583, 0.6251383082827079, 0.41319170821661055, 0.3861942755763971, 0.21280080638264953, 0.5524386224743534, 0.2019960766612946, 0.3351095983017649, 0.05706484924169564, 0.57673202580545, 0.5882238329785414, 0.7801749096585044},
            {0.9182794187428975, 0.9631701684368181, 0.859358155894809, 0.4633026584578406, 0.1387581114158003, 0.24386920775752774, 0.7848877122377195, 0.9269426403209836, 0.35810315617557686, 0.07462749178074113, 0.9562541441418664, 0.16164782779256992, 0.4637528374491474, 0.13147716848940338, 0.2844696450654255, 0.4442465026893856, 0.5068314598142404, 0.5383113228700225, 0.8138822058496604, 0.7099124273129135},
            {0.45711158168820176, 0.5287420167698754, 0.761543141800861, 0.1539649254464618, 0.1874999095738692, 0.7885091088699954, 0.22385757527452543, 0.14301893235132224, 0.8763097840087641, 0.1991730109311043, 0.3056754932386917, 0.9301443402073016, 0.09468485699097617, 0.5094896169779932, 0.521707410176917, 0.11498344734371968, 0.20688971752047425, 0.7977787989494044, 0.1961250501009838, 0.26731374957886733},
            {0.3527854614224385, 0.456762403613034, 0.24343457733819407, 0.6413329103019892, 0.20465933333885544, 0.8317617932871799, 0.15218553386508915, 0.4479814264295281, 0.8946789039882616, 0.5738085428136739, 0.21280650656888178, 0.7239077601627637, 0.9945933507452565, 0.23113674033157483, 0.0318335249303866, 0.4382199355206501, 0.19590576436282503, 0.5956886680916694, 0.1570254175161674, 0.11195602905921498},
            {0.38659170960615385, 0.8456799801243756, 0.2013354268436942, 0.8902459107961649, 0.1495412230411023, 0.5809348923538524, 0.19843607829205223, 0.703425093508739, 0.3182526365146222, 0.43461532955886706, 0.048470164324968756, 0.8809005038106894, 0.11690858989666775, 0.06313253347998615, 0.8199274970874565, 0.34035766496142705, 0.5848157469992407, 0.96544336040966, 0.3620238318567207, 0.26493716756012176},};
    static double temperature=1000;
    static double alpha=0.99;


    public static double getCost(int [][]select){
        double sum=0;
        for(int i=0;i<select.length;i++){
            for(int j=0;j<select[i].length;j++){
                if(select[i][j]==1){
                    sum+=select[i][j]*efficiency[i][j];
                }
            }
        }
        return 1000/sum;
    }

    public static int [][]localSearch(int [][]select){
        Random random=new Random();
        ArrayList<Integer> col=new ArrayList<>();
        for(int i=0;i<select.length;i++){
            for(int j=0;j<select[i].length;j++){
                if(select[i][j]==1){
                    col.add(j);
                }
            }
        }
        int pos1=random.nextInt(select.length-1);
        int pos2=random.nextInt(select.length-1);
        Collections.swap(col,pos1,pos2);
        //int [][]tempSelect=select.clone();

        int [][]tempSelect=new int[n][n];
        for(int i=0;i<tempSelect.length;i++){
            for(int j=0;j<tempSelect[i].length;j++){
                tempSelect[i][j]=0;
            }
        }

        for(int i=0;i<select.length;i++){
            for(int j=0;j<select[i].length;j++){
                if(col.get(i)==j){
                    tempSelect[i][j]=1;
                }
            }
        }
        return tempSelect;
    }

    public static int [][] inner(int [][]select){
        for(int i=0;i<20;i++){
            int [][]tempSelect=localSearch(select);
            double c1=getCost(tempSelect);
            double c2=getCost(select);
            double delta=c1-c2;
            if(delta<=0){
                select=tempSelect;
            }
            else {
                if(Math.exp(-delta/temperature)>Math.random()){
                    select=tempSelect;
                }
            }
        }
        return select;
    }

    public static void main(String[] args) {
        /*
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                efficiency[i][j]=Math.random();
            }
        }*/

        for(int i=0;i<n;i++){
            //System.out.println(Arrays.toString(efficiency[i]));
        }

        int [][]select=new int[n][n];
        for(int i=0;i<select.length;i++){
            for(int j=0;j<select[i].length;j++){
                if(i==j){
                    select[i][j]=1;
                }
                else{
                    select[i][j]=0;
                }
            }
        }
        for(int i=0;i<n;i++){
            //System.out.println(Arrays.toString(select[i]));
        }
        System.out.println(getCost(select));
        ArrayList<Double> cost=new ArrayList<>();

        for(int i=0;i<1000;i++){
            select=inner(select);
            temperature*=alpha;
            cost.add(getCost(select));
        }
        System.out.println(getCost(select));
        System.out.println(cost);
    }
}
